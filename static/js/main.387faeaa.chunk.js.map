{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Header/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["FormElement","styled","form","FormInput","input","FormButton","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","ref","type","className","placeholder","onChange","target","onClick","current","focus","List","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","Header","title","ButtonsList","div","Buttons","toggleHideDone","setAllDone","length","disabled","every","SectionElement","section","SectionHeader","header","SectionTitle","h2","SectionBody","Section","body","extraHeaderConntent","ContainerElement","main","Container","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.387faeaa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormElement = styled.form`\r\n    display: flex;\r\n    grid-column: 2;\r\n    margin: 10px 0;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n        flex-direction: column;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    flex-grow: 4;\r\n    margin-right: 20px;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    margin-left: 20px;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n            margin: 0 0 10px;\r\n            width: 90%;\r\n        }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    padding: 10px;\r\n    background-color: hsl(180, 100%, 25%);\r\n    color: #fff;\r\n    border: none;\r\n    transition: 0.3s;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        flex-shrink: 0;\r\n        flex-grow: 0;\r\n        margin-bottom: 10px;\r\n        width: 90%;\r\n    }\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n    \r\n    &:active {\r\n        background: hsl(180, 100%, 35%);\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\n  ","import { useState, useRef } from \"react\";\r\nimport { FormElement, FormButton, FormInput } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const inputRef = useRef(null);\r\n    const  focusInput = () => {\r\n    inputRef.current.focus();\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if(!trimmedNewTaskContent) {\r\n            return;\r\n        }\r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n    };\r\n    \r\n    return (\r\n        <FormElement onSubmit={onFormSubmit}>\r\n            <FormInput\r\n                value={newTaskContent}\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                className=\"form__input\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <FormButton onClick={focusInput}>Dodaj zadanie</FormButton> \r\n        </FormElement>\r\n    );\r\n};\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style-type: none;\r\n    margin: 0 10px;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    padding: 10px;\r\n    grid-gap: 10px;\r\n    border-bottom: 1px solid #aaa;\r\n    margin-bottom: 10px;\r\n    align-items: center;\r\n    word-break: break-all;\r\n\r\n    ${({hidden}) => hidden && css `\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({done}) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 0;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: white;\r\n    border: none;\r\n    transition: background 0.3s;\r\n\r\n    ${({toggleDone}) => toggleDone && css`\r\n        background: hsl(120, 61%, 34%);\r\n\r\n        &:hover {\r\n            background: hsl(120, 61%, 39%);\r\n        }\r\n    `}\r\n\r\n    ${({remove}) => remove && css`\r\n        background: hsl(348, 83%, 47%);\r\n\r\n        &:hover {\r\n            background: hsl(348, 83%, 52%);\r\n        }\r\n    `}\r\n`;","\r\nimport {List, Item, Content, Button} from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n                >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}>\r\n                  {task.content} \r\n                </Content>\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    &#128465;\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n        </List>\r\n);\r\n\r\nexport default Tasks;","const Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsList = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: 14px; \r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    color: hsl(180, 100%, 25%);\r\n    border: none;\r\n    background: transparent;\r\n    transition: 0.3s;\r\n    \r\n    &:hover {\r\n            color: hsl(180, 100%, 30%);\r\n        }\r\n\r\n    &: active: {\r\n        color: hsl(180, 100%, 35%);\r\n    }\r\n\r\n    &: disabled {\r\n        color: #ccc;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n`;\r\n","import { ButtonsList, Button } from \"./styled\";\r\n\r\nexport const Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <ButtonsList>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone} >\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </Button>\r\n                \r\n            </>\r\n        )}\r\n    </ButtonsList>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const SectionElement = styled.section`\r\n    margin: 10px 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 5px #ddd;\r\n    }\r\n`;\r\n\r\nexport const SectionHeader = styled.header`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n    margin: 0;\r\n    font-size: 22px;\r\n    border-bottom: 1px solid rgb(240, 236, 236);\r\n}\r\n\r\n@media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\nfont-size: 22px;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n        padding-bottom: 20px;\r\n    }\r\n`;\r\n\r\nexport const SectionBody = styled.div`\r\n    padding: 20px;\r\n}\r\n`;","import { SectionElement, SectionHeader, SectionTitle, SectionBody } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderConntent }) => (\r\n    <SectionElement>\r\n        <SectionHeader>\r\n            <SectionTitle>{title}</SectionTitle>\r\n            {extraHeaderConntent}\r\n        </SectionHeader>\r\n        <SectionBody>\r\n            {body}\r\n        </SectionBody>\r\n    </SectionElement>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const ContainerElement = styled.main`\r\n    max-width: 900px;\r\n    margin: 20px auto;\r\n    padding: 10px;\r\n}\r\n`;","import { ContainerElement } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <ContainerElement>\r\n        {children}\r\n        </ContainerElement>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Header from \"./Header\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\n\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('tasks')) || [\n    { id: 1, content: \"przejÅ›Ä‡ na Reacta\", done: false },\n    { id: 2, content: \"zjeÅ›Ä‡ obiad\", done: true },\n  ]);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderConntent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}